{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortAlphabetically","setState","ALPHABET","reset","sortByLength","LENGTH","reverseGoods","this","visibleGoods","goods","sort","a","b","localeCompare","length","reverse","getReorderedGoods","isHidden","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,UAAS,iBAAO,CACnBH,SAAUL,EAASS,cARzB,EAYEC,MAAQ,WACN,EAAKF,UAAS,iBAAO,CACnBH,SAAUL,EAASM,KACnBF,YAAY,OAflB,EAmBEO,aAAe,WACb,EAAKH,UAAS,iBAAO,CACnBH,SAAUL,EAASY,YArBzB,EAyBEC,aAAe,WACb,EAAKL,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBA3BzB,4CA+BE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdU,EA/DH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENW,EAAY,YAAOC,GAiBzB,OAfAD,EAAaE,MAAK,SAACC,EAAGC,GACpB,OAAQd,GACN,KAAKL,EAASS,SACZ,OAAOS,EAAEE,cAAcD,GACzB,KAAKnB,EAASY,OACZ,OAAOM,EAAEG,OAASF,EAAEE,OACtB,QACE,OAAOrB,EAASM,SAIlBF,GACFW,EAAaO,UAGRP,EA0CgBQ,CAAkBtB,EAAiB,CAAEI,WAAUD,eAC9DoB,EAAWnB,IAAaL,EAASM,OAASF,EAEhD,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBpB,IAAaL,EAASS,SAAW,GAAK,YACnEkB,QAASb,KAAKP,mBAHhB,iCAQA,wBACEmB,KAAK,SACLD,UAAS,4BAAuBpB,IAAaL,EAASY,OAAS,GAAK,YACpEe,QAASb,KAAKH,aAHhB,4BAQA,wBACEe,KAAK,SACLD,UAAS,4BAAuBrB,EAAa,GAAK,YAClDuB,QAASb,KAAKD,aAHhB,qBAQA,wBACEa,KAAK,SACLD,UAAS,2BAAsBD,EAAW,sBAAwB,YAClEG,QAASb,KAAKJ,MAHhB,sBASF,6BACGK,EAAaa,KAAI,SAACC,GAAD,OAEhB,aADA,CACA,MAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,eA5ErB,GAAyBC,IAAMC,WCtD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8691ea86.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return SortType.NONE;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabetically = () => {\n    this.setState(() => ({\n      sortType: SortType.ALPHABET,\n    }));\n  };\n\n  reset = () => {\n    this.setState(() => ({\n      sortType: SortType.NONE,\n      isReversed: false,\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState(() => ({\n      sortType: SortType.LENGTH,\n    }));\n  };\n\n  reverseGoods = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    // eslint-disable-next-line max-len\n    const visibleGoods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n    const isHidden = sortType === SortType.NONE && !isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${sortType === SortType.LENGTH ? '' : 'is-light'}`}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n            onClick={this.reverseGoods}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-danger ${isHidden ? 'hidden-reset-button' : 'is-light'}`}\n            onClick={this.reset}\n          >\n            Reset\n          </button>\n        </div>\n\n        <ul>\n          {visibleGoods.map((good: string) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}